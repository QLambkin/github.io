{"ast":null,"code":"import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nclass l {\n  constructor(t) {\n    this.uid = t;\n  }\n\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n\n\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n\n}\n/** A user with a null UID. */\n\n\nl.UNAUTHENTICATED = new l(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), l.MOCK_USER = new l(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet f = \"9.10.0\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst d = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction w(t) {\n  d.setLogLevel(t);\n}\n\nfunction m(t) {\n  if (d.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    const n = e.map(_);\n    d.debug(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n\nfunction p(t) {\n  if (d.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    const n = e.map(_);\n    d.error(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction y(t) {\n  if (d.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    const n = e.map(_);\n    d.warn(`Firestore (${f}): ${t}`, ...n);\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction _(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction g() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw p(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction v(t, e) {\n  t || g();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction b(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst E = \"ok\",\n      T = \"cancelled\",\n      I = \"unknown\",\n      A = \"invalid-argument\",\n      R = \"deadline-exceeded\",\n      P = \"not-found\",\n      V = \"already-exists\",\n      N = \"permission-denied\",\n      D = \"unauthenticated\",\n      $ = \"resource-exhausted\",\n      x = \"failed-precondition\",\n      F = \"aborted\",\n      S = \"out-of-range\",\n      q = \"unimplemented\",\n      O = \"internal\",\n      k = \"unavailable\",\n      C = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nclass L extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass M {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass U {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n\n}\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nclass j {\n  getToken() {\n    return Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(l.UNAUTHENTICATED));\n  }\n\n  shutdown() {}\n\n}\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nclass B {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    this.changeListener = e, // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n\n  shutdown() {\n    this.changeListener = null;\n  }\n\n}\n/** Credential provider for the Lite SDK. */\n\n\nclass z {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (v(\"string\" == typeof t.accessToken), new U(t.accessToken, new l(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nclass G {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.h = new Map();\n  }\n  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */\n\n\n  l() {\n    return this.u ? this.u() : ( // Make sure this really is a Gapi client.\n    v(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));\n  }\n\n  get headers() {\n    this.h.set(\"X-Goog-AuthUser\", this.i); // Use array notation to prevent minification\n\n    const t = this.l();\n    return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), this.h;\n  }\n\n}\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nclass W {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r;\n  }\n\n  getToken() {\n    return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n  }\n\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(l.FIRST_PARTY));\n  }\n\n  shutdown() {}\n\n  invalidateToken() {}\n\n}\n\nclass K {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n\n}\n/** AppCheck token provider for the Lite SDK. */\n\n\nclass Q {\n  constructor(t) {\n    this.m = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (v(\"string\" == typeof t.token), new K(t.token)) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass Y {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n  }\n\n}\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nclass H {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  static empty() {\n    return new H(\"\", \"\");\n  }\n\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n\n  isEqual(t) {\n    return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n  }\n\n}\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nclass J {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  get length() {\n    return this.len;\n  }\n\n  isEqual(t) {\n    return 0 === J.comparator(this, t);\n  }\n\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof J ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n\n\n  limit() {\n    return this.offset + this.length;\n  }\n\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n\n  isEmpty() {\n    return 0 === this.length;\n  }\n\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n            s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n\n}\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nclass X extends J {\n  construct(t, e, n) {\n    return new X(t, e, n);\n  }\n\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n\n\n  static fromString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n\n    for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      t[_key4] = arguments[_key4];\n    }\n\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new L(A, `Invalid segment (${n}). Paths must not contain // in them.`); // Strip leading and traling slashed.\n\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n\n    return new X(e);\n  }\n\n  static emptyPath() {\n    return new X([]);\n  }\n\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nclass tt extends J {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n\n\n  static isValidIdentifier(t) {\n    return Z.test(t);\n  }\n\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n\n\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n\n\n  static keyField() {\n    return new tt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n\n\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n        r = 0;\n\n    const s = () => {\n      if (0 === n.length) throw new L(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n\n    let i = !1;\n\n    for (; r < t.length;) {\n      const e = t[r];\n\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(A, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n\n    if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n    return new tt(e);\n  }\n\n  static emptyPath() {\n    return new tt([]);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nclass et {\n  constructor(t) {\n    this.path = t;\n  }\n\n  static fromPath(t) {\n    return new et(X.fromString(t));\n  }\n\n  static fromName(t) {\n    return new et(X.fromString(t).popFirst(5));\n  }\n\n  static empty() {\n    return new et(X.emptyPath());\n  }\n\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n\n\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n\n\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n\n  isEqual(t) {\n    return null !== t && 0 === X.comparator(this.path, t.path);\n  }\n\n  toString() {\n    return this.path.toString();\n  }\n\n  static comparator(t, e) {\n    return X.comparator(t.path, e.path);\n  }\n\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n\n\n  static fromSegments(t) {\n    return new et(new X(t.slice()));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction nt(t, e, n) {\n  if (!n) throw new L(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction rt(t) {\n  if (!et.isDocumentKey(t)) throw new L(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction st(t) {\n  if (et.isDocumentKey(t)) throw new L(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction it(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = it(t);\n      throw new L(A, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n\n  return t;\n}\n\nfunction ut(t, e) {\n  if (e <= 0) throw new L(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ct(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction at(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst ht = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar lt, ft;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction dt(t) {\n  if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return E;\n\n    case 400:\n      // Bad Request\n      return x;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return D;\n\n    case 403:\n      // Forbidden\n      return N;\n\n    case 404:\n      // Not Found\n      return P;\n\n    case 409:\n      // Conflict\n      return F;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return S;\n\n    case 429:\n      // Too Many Requests\n      return $;\n\n    case 499:\n      // Client Closed Request\n      return T;\n\n    case 500:\n      // Internal Server Error\n      return I;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return q;\n\n    case 503:\n      // Service Unavailable\n      return k;\n\n    case 504:\n      // Gateway Timeout\n      return R;\n\n    default:\n      return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", ft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", ft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", ft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", ft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", ft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", ft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", ft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  v(t, e, n, r, s) {\n    const i = this.T(t, e);\n    m(\"RestConnection\", \"Sending: \", i, n);\n    const o = {};\n    return this.I(o, r, s), this.A(t, i, o, n).then(t => (m(\"RestConnection\", \"Received: \", t), t), e => {\n      throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), e;\n    });\n  }\n\n  R(t, e, n, r, s, i) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.v(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n\n\n  I(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n\n  T(t, e) {\n    const n = ht[t];\n    return `${this.p}/v1/${e}:${n}`;\n  }\n\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.P = e;\n  }\n\n  V(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n\n  async A(t, e, n, r) {\n    const s = JSON.stringify(r);\n    let i;\n\n    try {\n      i = await this.P(e, {\n        method: \"POST\",\n        headers: n,\n        body: s\n      });\n    } catch (t) {\n      throw new L(dt(t.status), \"Request failed with error: \" + t.statusText);\n    }\n\n    if (!i.ok) throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n    return i.json();\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction mt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n        n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass pt {\n  static N() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n    let n = \"\";\n\n    for (; n.length < 20;) {\n      const r = mt(40);\n\n      for (let s = 0; s < r.length; ++s) // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n\n    return n;\n  }\n\n}\n\nfunction yt(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction _t(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nclass gt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  static now() {\n    return gt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n\n\n  static fromDate(t) {\n    return gt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n\n\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n    return new gt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n\n\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n\n\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n\n  _compareTo(t) {\n    return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n\n\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n\n\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nclass vt {\n  constructor(t) {\n    this.timestamp = t;\n  }\n\n  static fromTimestamp(t) {\n    return new vt(t);\n  }\n\n  static min() {\n    return new vt(new gt(0, 0));\n  }\n\n  static max() {\n    return new vt(new gt(253402300799, 999999999));\n  }\n\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n\n\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n\n  toTimestamp() {\n    return this.timestamp;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  let e = 0;\n\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n\n  return e;\n}\n\nfunction Et(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nclass Tt {\n  constructor(t, e) {\n    this.comparator = t, this.root = e || At.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  insert(t, e) {\n    return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n  } // Returns a copy of the map, with the specified key removed.\n\n\n  remove(t) {\n    return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n  } // Returns the value of the node with the given key, or null.\n\n\n  get(t) {\n    let e = this.root;\n\n    for (; !e.isEmpty();) {\n      const n = this.comparator(t, e.key);\n      if (0 === n) return e.value;\n      n < 0 ? e = e.left : n > 0 && (e = e.right);\n    }\n\n    return null;\n  } // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n\n\n  indexOf(t) {\n    // Number of nodes that were pruned when descending right\n    let e = 0,\n        n = this.root;\n\n    for (; !n.isEmpty();) {\n      const r = this.comparator(t, n.key);\n      if (0 === r) return e + n.left.size;\n      r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n      e += n.left.size + 1, n = n.right);\n    } // Node not found\n\n\n    return -1;\n  }\n\n  isEmpty() {\n    return this.root.isEmpty();\n  } // Returns the total number of nodes in the map.\n\n\n  get size() {\n    return this.root.size;\n  } // Returns the minimum key in the map.\n\n\n  minKey() {\n    return this.root.minKey();\n  } // Returns the maximum key in the map.\n\n\n  maxKey() {\n    return this.root.maxKey();\n  } // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  inorderTraversal(t) {\n    return this.root.inorderTraversal(t);\n  }\n\n  forEach(t) {\n    this.inorderTraversal((e, n) => (t(e, n), !1));\n  }\n\n  toString() {\n    const t = [];\n    return this.inorderTraversal((e, n) => (t.push(`${e}:${n}`), !1)), `{${t.join(\", \")}}`;\n  } // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  reverseTraversal(t) {\n    return this.root.reverseTraversal(t);\n  } // Returns an iterator over the SortedMap.\n\n\n  getIterator() {\n    return new It(this.root, null, this.comparator, !1);\n  }\n\n  getIteratorFrom(t) {\n    return new It(this.root, t, this.comparator, !1);\n  }\n\n  getReverseIterator() {\n    return new It(this.root, null, this.comparator, !0);\n  }\n\n  getReverseIteratorFrom(t) {\n    return new It(this.root, t, this.comparator, !0);\n  }\n\n} // end SortedMap\n// An iterator over an LLRBNode.\n\n\nclass It {\n  constructor(t, e, n, r) {\n    this.isReverse = r, this.nodeStack = [];\n    let s = 1;\n\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0) // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      } // This node is greater than our start key, add it to the stack and move\n      // to the next one\n\n\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n\n  getNext() {\n    let t = this.nodeStack.pop();\n    const e = {\n      key: t.key,\n      value: t.value\n    };\n    if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n    return e;\n  }\n\n  hasNext() {\n    return this.nodeStack.length > 0;\n  }\n\n  peek() {\n    if (0 === this.nodeStack.length) return null;\n    const t = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: t.key,\n      value: t.value\n    };\n  }\n\n} // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nclass At {\n  constructor(t, e, n, r, s) {\n    this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  copy(t, e, n, r, s) {\n    return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n  }\n\n  isEmpty() {\n    return !1;\n  } // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  inorderTraversal(t) {\n    return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n  } // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  reverseTraversal(t) {\n    return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n  } // Returns the minimum node in the tree.\n\n\n  min() {\n    return this.left.isEmpty() ? this : this.left.min();\n  } // Returns the maximum key in the tree.\n\n\n  minKey() {\n    return this.min().key;\n  } // Returns the maximum key in the tree.\n\n\n  maxKey() {\n    return this.right.isEmpty() ? this.key : this.right.maxKey();\n  } // Returns new tree, with the key/value added.\n\n\n  insert(t, e, n) {\n    let r = this;\n    const s = n(t, r.key);\n    return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n  }\n\n  removeMin() {\n    if (this.left.isEmpty()) return At.EMPTY;\n    let t = this;\n    return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n  } // Returns new tree, with the specified item removed.\n\n\n  remove(t, e) {\n    let n,\n        r = this;\n    if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n      if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n        if (r.right.isEmpty()) return At.EMPTY;\n        n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n      }\n\n      r = r.copy(null, null, null, null, r.right.remove(t, e));\n    }\n    return r.fixUp();\n  }\n\n  isRed() {\n    return this.color;\n  } // Returns new tree after performing any needed rotations.\n\n\n  fixUp() {\n    let t = this;\n    return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n  }\n\n  moveRedLeft() {\n    let t = this.colorFlip();\n    return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n  }\n\n  moveRedRight() {\n    let t = this.colorFlip();\n    return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n  }\n\n  rotateLeft() {\n    const t = this.copy(null, null, At.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, t, null);\n  }\n\n  rotateRight() {\n    const t = this.copy(null, null, At.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, t);\n  }\n\n  colorFlip() {\n    const t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, t, e);\n  } // For testing.\n\n\n  checkMaxDepth() {\n    const t = this.check();\n    return Math.pow(2, t) <= this.size + 1;\n  } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n\n\n  check() {\n    if (this.isRed() && this.left.isRed()) throw g();\n    if (this.right.isRed()) throw g();\n    const t = this.left.check();\n    if (t !== this.right.check()) throw g();\n    return t + (this.isRed() ? 0 : 1);\n  }\n\n} // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1; // end LLRBEmptyNode\n\nAt.EMPTY = new // Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n  constructor() {\n    this.size = 0;\n  }\n\n  get key() {\n    throw g();\n  }\n\n  get value() {\n    throw g();\n  }\n\n  get color() {\n    throw g();\n  }\n\n  get left() {\n    throw g();\n  }\n\n  get right() {\n    throw g();\n  } // Returns a copy of the current node.\n\n\n  copy(t, e, n, r, s) {\n    return this;\n  } // Returns a copy of the tree, with the specified key/value added.\n\n\n  insert(t, e, n) {\n    return new At(t, e);\n  } // Returns a copy of the tree, with the specified key removed.\n\n\n  remove(t, e) {\n    return this;\n  }\n\n  isEmpty() {\n    return !0;\n  }\n\n  inorderTraversal(t) {\n    return !1;\n  }\n\n  reverseTraversal(t) {\n    return !1;\n  }\n\n  minKey() {\n    return null;\n  }\n\n  maxKey() {\n    return null;\n  }\n\n  isRed() {\n    return !1;\n  } // For testing.\n\n\n  checkMaxDepth() {\n    return !0;\n  }\n\n  check() {\n    return 0;\n  }\n\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nclass Rt {\n  constructor(t) {\n    this.comparator = t, this.data = new Tt(this.comparator);\n  }\n\n  has(t) {\n    return null !== this.data.get(t);\n  }\n\n  first() {\n    return this.data.minKey();\n  }\n\n  last() {\n    return this.data.maxKey();\n  }\n\n  get size() {\n    return this.data.size;\n  }\n\n  indexOf(t) {\n    return this.data.indexOf(t);\n  }\n  /** Iterates elements in order defined by \"comparator\" */\n\n\n  forEach(t) {\n    this.data.inorderTraversal((e, n) => (t(e), !1));\n  }\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n\n  forEachInRange(t, e) {\n    const n = this.data.getIteratorFrom(t[0]);\n\n    for (; n.hasNext();) {\n      const r = n.getNext();\n      if (this.comparator(r.key, t[1]) >= 0) return;\n      e(r.key);\n    }\n  }\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n\n\n  forEachWhile(t, e) {\n    let n;\n\n    for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n      if (!t(n.getNext().key)) return;\n    }\n  }\n  /** Finds the least element greater than or equal to `elem`. */\n\n\n  firstAfterOrEqual(t) {\n    const e = this.data.getIteratorFrom(t);\n    return e.hasNext() ? e.getNext().key : null;\n  }\n\n  getIterator() {\n    return new Pt(this.data.getIterator());\n  }\n\n  getIteratorFrom(t) {\n    return new Pt(this.data.getIteratorFrom(t));\n  }\n  /** Inserts or updates an element */\n\n\n  add(t) {\n    return this.copy(this.data.remove(t).insert(t, !0));\n  }\n  /** Deletes an element */\n\n\n  delete(t) {\n    return this.has(t) ? this.copy(this.data.remove(t)) : this;\n  }\n\n  isEmpty() {\n    return this.data.isEmpty();\n  }\n\n  unionWith(t) {\n    let e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n    return e.size < t.size && (e = t, t = this), t.forEach(t => {\n      e = e.add(t);\n    }), e;\n  }\n\n  isEqual(t) {\n    if (!(t instanceof Rt)) return !1;\n    if (this.size !== t.size) return !1;\n    const e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n    for (; e.hasNext();) {\n      const t = e.getNext().key,\n            r = n.getNext().key;\n      if (0 !== this.comparator(t, r)) return !1;\n    }\n\n    return !0;\n  }\n\n  toArray() {\n    const t = [];\n    return this.forEach(e => {\n      t.push(e);\n    }), t;\n  }\n\n  toString() {\n    const t = [];\n    return this.forEach(e => t.push(e)), \"SortedSet(\" + t.toString() + \")\";\n  }\n\n  copy(t) {\n    const e = new Rt(this.comparator);\n    return e.data = t, e;\n  }\n\n}\n\nclass Pt {\n  constructor(t) {\n    this.iter = t;\n  }\n\n  getNext() {\n    return this.iter.getNext().key;\n  }\n\n  hasNext() {\n    return this.iter.hasNext();\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nclass Vt {\n  constructor(t) {\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(tt.comparator);\n  }\n\n  static empty() {\n    return new Vt([]);\n  }\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n\n\n  unionWith(t) {\n    let e = new Rt(tt.comparator);\n\n    for (const t of this.fields) e = e.add(t);\n\n    for (const n of t) e = e.add(n);\n\n    return new Vt(e.toArray());\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n\n    return !1;\n  }\n\n  isEqual(t) {\n    return _t(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nclass Nt {\n  constructor(t) {\n    this.binaryString = t;\n  }\n\n  static fromBase64String(t) {\n    const e = atob(t);\n    return new Nt(e);\n  }\n\n  static fromUint8Array(t) {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */\n    (t);\n\n    return new Nt(e);\n  }\n\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    /** Converts a binary string to a Base64 encoded string. */\n\n    var t;\n  }\n\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n\n  compareTo(t) {\n    return yt(this.binaryString, t.binaryString);\n  }\n\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n\n}\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction $t(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (v(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = Dt.exec(t);\n\n    if (v(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    } // Parse the date to get the seconds.\n\n\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: xt(t.seconds),\n    nanos: xt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction xt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Ft(t) {\n  return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction St(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction qt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return St(e) ? qt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Ot(t) {\n  const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new gt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst kt = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n/** Extracts the backend's type order for the provided value. */\n\nfunction Ct(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? St(t) ? 4\n  /* ServerTimestampValue */\n  :\n  /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n  * ability to add and remove fields (via the ObjectValueBuilder).\n  */\n  (t) ? 9007199254740991\n  /* MaxValue */\n  : 10\n  /* ObjectValue */\n  : g();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Lt(t, e) {\n  if (t === e) return !0;\n  const n = Ct(t);\n  if (n !== Ct(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n    case 9007199254740991\n    /* MaxValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Ot(t).isEqual(Ot(e));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = $t(t.timestampValue),\n              r = $t(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = xt(t.doubleValue),\n                r = xt(e.doubleValue);\n          return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* ArrayValue */\n    :\n      return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n              r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return g();\n  }\n}\n\nfunction Mt(t, e) {\n  return void 0 !== (t.values || []).find(t => Lt(t, e));\n}\n\nfunction Ut(t, e) {\n  if (t === e) return 0;\n  const n = Ct(t),\n        r = Ct(e);\n  if (n !== r) return yt(n, r);\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n    case 9007199254740991\n    /* MaxValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return yt(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        const n = xt(t.integerValue || t.doubleValue),\n              r = xt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TimestampValue */\n    :\n      return jt(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return jt(Ot(t), Ot(e));\n\n    case 5\n    /* StringValue */\n    :\n      return yt(t.stringValue, e.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        const n = Ft(t),\n              r = Ft(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, e) {\n        const n = t.split(\"/\"),\n              r = e.split(\"/\");\n\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = yt(n[t], r[t]);\n          if (0 !== e) return e;\n        }\n\n        return yt(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        const n = yt(xt(t.latitude), xt(e.latitude));\n        if (0 !== n) return n;\n        return yt(xt(t.longitude), xt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, e) {\n        const n = t.values || [],\n              r = e.values || [];\n\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = Ut(n[t], r[t]);\n          if (e) return e;\n        }\n\n        return yt(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        if (t === kt && e === kt) return 0;\n        if (t === kt) return 1;\n        if (e === kt) return -1;\n        const n = t.fields || {},\n              r = Object.keys(n),\n              s = e.fields || {},\n              i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = yt(r[t], i[t]);\n          if (0 !== e) return e;\n          const o = Ut(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n\n        return yt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw g();\n  }\n}\n\nfunction jt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n  const n = $t(t),\n        r = $t(e),\n        s = yt(n.seconds, r.seconds);\n  return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction zt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Gt(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Wt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction Kt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Qt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Qt(n)), e;\n  }\n\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n\n    return e;\n  }\n\n  return Object.assign({}, t);\n}\n\nclass Yt {\n  constructor(t) {\n    this.value = t;\n  }\n\n  static empty() {\n    return new Yt({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n\n\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !Kt(e)) return null;\n\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n\n\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n\n\n  setAll(t) {\n    let e = tt.emptyPath(),\n        n = {},\n        r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n\n      t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n\n\n  delete(t) {\n    const e = this.field(t.popLast());\n    Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n\n  isEqual(t) {\n    return Lt(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n\n\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      Kt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n\n\n  applyChanges(t, e, n) {\n    Et(e, (e, n) => t[e] = n);\n\n    for (const e of n) delete t[e];\n  }\n\n  clone() {\n    return new Yt(Qt(this.value));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nclass Ht {\n  constructor(t, e, n, r, s, i) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, this.documentState = i;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  static newInvalidDocument(t) {\n    return new Ht(t, 0\n    /* INVALID */\n    , vt.min(), vt.min(), Yt.empty(), 0\n    /* SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n\n\n  static newFoundDocument(t, e, n) {\n    return new Ht(t, 1\n    /* FOUND_DOCUMENT */\n    , e, vt.min(), n, 0\n    /* SYNCED */\n    );\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n\n\n  static newNoDocument(t, e) {\n    return new Ht(t, 2\n    /* NO_DOCUMENT */\n    , e, vt.min(), Yt.empty(), 0\n    /* SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  static newUnknownDocument(t, e) {\n    return new Ht(t, 3\n    /* UNKNOWN_DOCUMENT */\n    , e, vt.min(), Yt.empty(), 2\n    /* HAS_COMMITTED_MUTATIONS */\n    );\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n\n\n  convertToFoundDocument(t, e) {\n    return this.version = t, this.documentType = 1\n    /* FOUND_DOCUMENT */\n    , this.data = e, this.documentState = 0\n    /* SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n\n\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2\n    /* NO_DOCUMENT */\n    , this.data = Yt.empty(), this.documentState = 0\n    /* SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3\n    /* UNKNOWN_DOCUMENT */\n    , this.data = Yt.empty(), this.documentState = 2\n    /* HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasCommittedMutations() {\n    return this.documentState = 2\n    /* HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasLocalMutations() {\n    return this.documentState = 1\n    /* HAS_LOCAL_MUTATIONS */\n    , this.version = vt.min(), this;\n  }\n\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n\n  get hasLocalMutations() {\n    return 1\n    /* HAS_LOCAL_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasCommittedMutations() {\n    return 2\n    /* HAS_COMMITTED_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n\n  isValidDocument() {\n    return 0\n    /* INVALID */\n    !== this.documentType;\n  }\n\n  isFoundDocument() {\n    return 1\n    /* FOUND_DOCUMENT */\n    === this.documentType;\n  }\n\n  isNoDocument() {\n    return 2\n    /* NO_DOCUMENT */\n    === this.documentType;\n  }\n\n  isUnknownDocument() {\n    return 3\n    /* UNKNOWN_DOCUMENT */\n    === this.documentType;\n  }\n\n  isEqual(t) {\n    return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n\n  mutableCopy() {\n    return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n  }\n\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nclass Jt {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.D = null;\n  }\n\n}\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Xt(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new Jt(t, e, n, r, s, i, o);\n}\n\nclass Zt extends class {} {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\"\n    /* IN */\n    === e || \"not-in\"\n    /* NOT_IN */\n    === e ? this.$(t, e, n) : new te(t, e, n) : \"array-contains\"\n    /* ARRAY_CONTAINS */\n    === e ? new se(t, n) : \"in\"\n    /* IN */\n    === e ? new ie(t, n) : \"not-in\"\n    /* NOT_IN */\n    === e ? new oe(t, n) : \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    === e ? new ue(t, n) : new Zt(t, e, n);\n  }\n\n  static $(t, e, n) {\n    return \"in\"\n    /* IN */\n    === e ? new ee(t, n) : new ne(t, n);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n    return \"!=\"\n    /* NOT_EQUAL */\n    === this.op ? null !== e && this.F(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.F(Ut(e, this.value)); // Only compare types with matching backend order (such as double and int).\n  }\n\n  F(t) {\n    switch (this.op) {\n      case \"<\"\n      /* LESS_THAN */\n      :\n        return t < 0;\n\n      case \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      :\n        return t <= 0;\n\n      case \"==\"\n      /* EQUAL */\n      :\n        return 0 === t;\n\n      case \"!=\"\n      /* NOT_EQUAL */\n      :\n        return 0 !== t;\n\n      case \">\"\n      /* GREATER_THAN */\n      :\n        return t > 0;\n\n      case \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      :\n        return t >= 0;\n\n      default:\n        return g();\n    }\n  }\n\n  S() {\n    return [\"<\"\n    /* LESS_THAN */\n    , \"<=\"\n    /* LESS_THAN_OR_EQUAL */\n    , \">\"\n    /* GREATER_THAN */\n    , \">=\"\n    /* GREATER_THAN_OR_EQUAL */\n    , \"!=\"\n    /* NOT_EQUAL */\n    , \"not-in\"\n    /* NOT_IN */\n    ].indexOf(this.op) >= 0;\n  }\n\n}\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nclass te extends Zt {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = et.fromName(n.referenceValue);\n  }\n\n  matches(t) {\n    const e = et.comparator(t.key, this.key);\n    return this.F(e);\n  }\n\n}\n/** Filter that matches on key fields within an array. */\n\n\nclass ee extends Zt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* IN */\n    , e), this.keys = re(\"in\"\n    /* IN */\n    , e);\n  }\n\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n/** Filter that matches on key fields not present within an array. */\n\n\nclass ne extends Zt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* NOT_IN */\n    , e), this.keys = re(\"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n\nfunction re(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => et.fromName(t.referenceValue));\n}\n/** A Filter that implements the array-contains operator. */\n\n\nclass se extends Zt {\n  constructor(t, e) {\n    super(t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return zt(e) && Mt(e.arrayValue, this.value);\n  }\n\n}\n/** A Filter that implements the IN operator. */\n\n\nclass ie extends Zt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* IN */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && Mt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the not-in operator. */\n\n\nclass oe extends Zt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    if (Mt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !Mt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the array-contains-any operator. */\n\n\nclass ue extends Zt {\n  constructor(t, e) {\n    super(t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => Mt(this.value.arrayValue, t));\n  }\n\n}\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nclass ce {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n\n}\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nclass ae {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n    this.field = t, this.dir = e;\n  }\n\n}\n\nfunction he(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (let n = 0; n < t.position.length; n++) {\n    if (!Lt(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nclass fe {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, // The corresponding `Target` of this `Query` instance.\n    this.O = null, this.startAt, this.endAt;\n  }\n\n}\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction de(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n  for (const e of t.filters) if (e.S()) return e.field;\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction me(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction pe(t) {\n  const e = b(t);\n\n  if (null === e.q) {\n    e.q = [];\n    const t = we(e),\n          n = de(e);\n    if (null !== t && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(tt.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      let t = !1;\n\n      for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n        e.q.push(new ae(tt.keyField(), t));\n      }\n    }\n  }\n\n  return e.q;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction ye(t) {\n  const e = b(t);\n  if (!e.O) if (\"F\"\n  /* First */\n  === e.limitType) e.O = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n\n    for (const n of pe(e)) {\n      const e = \"desc\"\n      /* DESCENDING */\n      === n.dir ? \"asc\"\n      /* ASCENDING */\n      : \"desc\"\n      /* DESCENDING */\n      ;\n      t.push(new ae(n.field, e));\n    } // We need to swap the cursors to match the now-flipped query ordering.\n\n\n    const n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null,\n          r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.O = Xt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\n\nfunction _e(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n\n    var n, r;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n  }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction ge(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.k) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: at(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nclass ve {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n\n}\n/** Transforms a value into a server-generated timestamp. */\n\n\nclass be extends ve {}\n/** Transforms an array value via a union operation. */\n\n\nclass Ee extends ve {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/** Transforms an array value via a remove operation. */\n\n\nclass Te extends ve {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nclass Ie extends ve {\n  constructor(t, e) {\n    super(), this.C = t, this.L = e;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nclass Ae {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n\n}\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nclass Re {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  static none() {\n    return new Re();\n  }\n  /** Creates a new Precondition with an exists flag. */\n\n\n  static exists(t) {\n    return new Re(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n\n\n  static updateTime(t) {\n    return new Re(t);\n  }\n  /** Returns whether this Precondition is empty. */\n\n\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n\n}\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nclass Pe {}\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nclass Ve extends Pe {\n  constructor(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0\n    /* Set */\n    ;\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nclass Ne extends Pe {\n  constructor(t, e, n, r) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1\n    /* Patch */\n    ;\n  }\n\n  getFieldMask() {\n    return this.fieldMask;\n  }\n\n}\n/** A mutation that deletes the document at the given key. */\n\n\nclass De extends Pe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2\n    /* Delete */\n    , this.fieldTransforms = [];\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nclass $e extends Pe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3\n    /* Verify */\n    , this.fieldTransforms = [];\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst xe = (() => {\n  const t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n})(),\n      Fe = (() => {\n  const t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n})();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nclass Se {\n  constructor(t, e) {\n    this.databaseId = t, this.k = e;\n  }\n\n}\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction qe(t, e) {\n  if (t.k) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Oe(t, e) {\n  return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n  return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n  return v(!!t), vt.fromTimestamp(function (t) {\n    const e = $t(t);\n    return new gt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction Le(t, e) {\n  return function (t) {\n    return new X([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n  return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n  const n = function (t) {\n    const e = X.fromString(t);\n    return v(Xe(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction je(t, e) {\n  return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n  return new X([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n  return {\n    name: Me(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction Ge(t, e) {\n  return \"found\" in e ? function (t, e) {\n    v(!!e.found), e.found.name, e.found.updateTime;\n    const n = Ue(t, e.found.name),\n          r = Ce(e.found.updateTime),\n          s = new Yt({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return Ht.newFoundDocument(n, r, s);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    v(!!e.missing), v(!!e.readTime);\n    const n = Ue(t, e.missing),\n          r = Ce(e.readTime);\n    return Ht.newNoDocument(n, r);\n  }(t, e) : g();\n}\n\nfunction We(t, e) {\n  let n;\n  if (e instanceof Ve) n = {\n    update: ze(t, e.key, e.value)\n  };else if (e instanceof De) n = {\n    delete: Me(t, e.key)\n  };else if (e instanceof Ne) n = {\n    update: ze(t, e.key, e.data),\n    updateMask: Je(e.fieldMask)\n  };else {\n    if (!(e instanceof $e)) return g();\n    n = {\n      verify: Me(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof be) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof Ee) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Te) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Ie) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.L\n    };\n    throw g();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: ke(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : g();\n  }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n    structuredQuery: {}\n  },\n        r = e.path;\n  null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  const s = function (t) {\n    if (0 === t.length) return;\n    const e = t.map(t => // visible for testing\n    function (t) {\n      if (\"==\"\n      /* EQUAL */\n      === t.op) {\n        if (Wt(t.value)) return {\n          unaryFilter: {\n            field: He(t.field),\n            op: \"IS_NAN\"\n          }\n        };\n        if (Gt(t.value)) return {\n          unaryFilter: {\n            field: He(t.field),\n            op: \"IS_NULL\"\n          }\n        };\n      } else if (\"!=\"\n      /* NOT_EQUAL */\n      === t.op) {\n        if (Wt(t.value)) return {\n          unaryFilter: {\n            field: He(t.field),\n            op: \"IS_NOT_NAN\"\n          }\n        };\n        if (Gt(t.value)) return {\n          unaryFilter: {\n            field: He(t.field),\n            op: \"IS_NOT_NULL\"\n          }\n        };\n      }\n\n      return {\n        fieldFilter: {\n          field: He(t.field),\n          op: Ye(t.op),\n          value: t.value\n        }\n      };\n    }(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t => // visible for testing\n    function (t) {\n      return {\n        field: He(t.field),\n        direction: Qe(t.dir)\n      };\n    }(t));\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  const o = function (t, e) {\n    return t.k || ct(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction Qe(t) {\n  return xe[t];\n} // visible for testing\n\n\nfunction Ye(t) {\n  return Fe[t];\n}\n\nfunction He(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction Je(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\n\nfunction Xe(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Ze(t) {\n  return new Se(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nclass tn {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.G = 0, this.W = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.K = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  reset() {\n    this.G = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n\n\n  Y() {\n    this.G = this.B;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n\n\n  H(t) {\n    // Cancel any pending backoff operation.\n    this.cancel(); // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n\n    const e = Math.floor(this.G + this.J()),\n          n = Math.max(0, Date.now() - this.K),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n    r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.G} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.W = this.M.enqueueAfterDelay(this.timerId, r, () => (this.K = Date.now(), t())), // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.G *= this.j, this.G < this.U && (this.G = this.U), this.G > this.B && (this.G = this.B);\n  }\n\n  X() {\n    null !== this.W && (this.W.skipDelay(), this.W = null);\n  }\n\n  cancel() {\n    null !== this.W && (this.W.cancel(), this.W = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n\n  J() {\n    return (Math.random() - .5) * this.G;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nclass en extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.Z = n, this.C = r, this.tt = !1;\n  }\n\n  et() {\n    if (this.tt) throw new L(x, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n\n  v(t, e, n) {\n    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref => {\n      let [r, s] = _ref;\n      return this.Z.v(t, e, n, r, s);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n\n  R(t, e, n, r) {\n    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref2 => {\n      let [s, i] = _ref2;\n      return this.Z.R(t, e, n, s, i, r);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n    });\n  }\n\n  terminate() {\n    this.tt = !0;\n  }\n\n} // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nasync function nn(t, e) {\n  const n = b(t),\n        r = Be(n.C) + \"/documents\",\n        s = {\n    writes: e.map(t => We(n.C, t))\n  };\n  await n.v(\"Commit\", r, s);\n}\n\nasync function rn(t, e) {\n  const n = b(t),\n        r = Be(n.C) + \"/documents\",\n        s = {\n    documents: e.map(t => Me(n.C, t))\n  },\n        i = await n.R(\"BatchGetDocuments\", r, s, e.length),\n        o = new Map();\n  i.forEach(t => {\n    const e = Ge(n.C, t);\n    o.set(e.key.toString(), e);\n  });\n  const u = [];\n  return e.forEach(t => {\n    const e = o.get(t.toString());\n    v(!!e), u.push(e);\n  }), u;\n}\n\nasync function sn(t, e) {\n  const n = b(t),\n        r = Ke(n.C, ye(e));\n  return (await n.R(\"RunQuery\", r.parent, {\n    structuredQuery: r.structuredQuery\n  })).filter(t => !!t.document).map(t => function (t, e, n) {\n    const r = Ue(t, e.name),\n          s = Ce(e.updateTime),\n          i = new Yt({\n      mapValue: {\n        fields: e.fields\n      }\n    }),\n          o = Ht.newFoundDocument(r, s, i);\n    return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n  }(n.C, t.document, void 0));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst on = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction un(t) {\n  if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n\n  if (!on.has(t)) {\n    m(\"ComponentProvider\", \"Initializing Datastore\");\n\n    const i = function (t) {\n      return new wt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n          o = Ze(t._databaseId),\n          u = function (t, e, n, r) {\n      return new en(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    on.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return on.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nclass cn {\n  constructor(t) {\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new L(A, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nclass an {\n  /** @hideconstructor */\n  constructor(t, e, n, r) {\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  get app() {\n    if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new j();\n\n      switch (t.type) {\n        case \"gapi\":\n          const e = t.client;\n          return new W(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n        case \"provider\":\n          return t.client;\n\n        default:\n          throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n\n  _getSettings() {\n    return this._settings;\n  }\n\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n\n\n  _terminate() {\n    return function (t) {\n      const e = on.get(t);\n      e && (m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n\n}\n\nfunction hn(t, e, n) {\n  n || (n = \"(default)\");\n\n  const r = _getProvider(t, \"firestore/lite\");\n\n  if (r.isInitialized(n)) throw new L(x, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\n\nfunction ln(e, n) {\n  const r = \"object\" == typeof e ? e : getApp(),\n        s = \"string\" == typeof e ? e : n || \"(default)\";\n  return _getProvider(r, \"firestore/lite\").getImmediate({\n    identifier: s\n  });\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction fn(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  const i = (t = ot(t, an))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new l(i);\n    }\n    t._authCredentials = new B(new U(e, n));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction dn(t) {\n  return t = ot(t, an), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nclass wn {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n\n\n  get parent() {\n    return new pn(this.firestore, this.converter, this._key.path.popLast());\n  }\n\n  withConverter(t) {\n    return new wn(this.firestore, t, this._key);\n  }\n\n}\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nclass mn {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  withConverter(t) {\n    return new mn(this.firestore, t, this._query);\n  }\n\n}\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nclass pn extends mn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new fe(n)), this._path = n,\n    /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n\n\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n\n\n  get parent() {\n    const t = this._path.popLast();\n\n    return t.isEmpty() ? null : new wn(this.firestore,\n    /* converter= */\n    null, new et(t));\n  }\n\n  withConverter(t) {\n    return new pn(this.firestore, t, this._path);\n  }\n\n}\n\nfunction yn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), nt(\"collection\", \"path\", e), t instanceof an) {\n    const r = X.fromString(e, ...n);\n    return st(r), new pn(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(X.fromString(e, ...n));\n\n    return st(r), new pn(t.firestore,\n    /* converter= */\n    null, r);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction _n(t, e) {\n  if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new mn(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new fe(X.emptyPath(), t);\n  }(e));\n}\n\nfunction gn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = pt.N()), nt(\"doc\", \"path\", e), t instanceof an) {\n    const r = X.fromString(e, ...n);\n    return rt(r), new wn(t,\n    /* converter= */\n    null, new et(r));\n  }\n\n  {\n    if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(X.fromString(e, ...n));\n\n    return rt(r), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(r));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction vn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction bn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof mn && e instanceof mn && t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nclass En {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor() {\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n\n    this._internalPath = new tt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n\n}\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction Tn() {\n  return new En(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nclass In {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  static fromBase64String(t) {\n    try {\n      return new In(Nt.fromBase64String(t));\n    } catch (t) {\n      throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n\n\n  static fromUint8Array(t) {\n    return new In(Nt.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n\n\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n\n\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n\n\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nclass An {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nclass Rn {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n\n\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n\n\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n\n\n  _compareTo(t) {\n    return yt(this._lat, t._lat) || yt(this._long, t._long);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Pn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nclass Vn {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n  }\n\n}\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nclass Nn {\n  constructor(t, // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n\n}\n\nfunction Dn(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw g();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nclass $n {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  get path() {\n    return this.settings.path;\n  }\n\n  get rt() {\n    return this.settings.rt;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n\n\n  st(t) {\n    return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n\n  it(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.st({\n      path: n,\n      ot: !1\n    });\n    return r.ut(t), r;\n  }\n\n  ct(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.st({\n      path: n,\n      ot: !1\n    });\n    return r.nt(), r;\n  }\n\n  at(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.st({\n      path: void 0,\n      ot: !0\n    });\n  }\n\n  ht(t) {\n    return Jn(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n\n  nt() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n  }\n\n  ut(t) {\n    if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n    if (Dn(this.rt) && Pn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n  }\n\n}\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nclass xn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || Ze(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  dt(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    return new $n({\n      rt: t,\n      methodName: e,\n      ft: n,\n      path: tt.emptyPath(),\n      ot: !1,\n      lt: r\n    }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n  }\n\n}\n\nfunction Fn(t) {\n  const e = t._freezeSettings(),\n        n = Ze(t._databaseId);\n\n  return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Sn(t, e, n, r, s) {\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const o = t.dt(i.merge || i.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , e, n, s);\n  Kn(\"Data must be an object, but it was:\", o, r);\n  const u = Gn(r, o);\n  let c, a;\n  if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n\n    for (const r of i.mergeFields) {\n      const s = Qn(e, r, n);\n      if (!o.contains(s)) throw new L(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      Xn(t, s) || t.push(s);\n    }\n\n    c = new Vt(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new Vn(new Yt(u), c, a);\n}\n\nclass qn extends An {\n  _toFieldTransform(t) {\n    if (2\n    /* MergeSet */\n    !== t.rt) throw 1\n    /* Update */\n    === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`); // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n\n    return t.fieldMask.push(t.path), null;\n  }\n\n  isEqual(t) {\n    return t instanceof qn;\n  }\n\n}\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction On(t, e, n) {\n  return new $n({\n    rt: 3\n    /* Argument */\n    ,\n    ft: e.settings.ft,\n    methodName: t._methodName,\n    ot: n\n  }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass kn extends An {\n  _toFieldTransform(t) {\n    return new Ae(t.path, new be());\n  }\n\n  isEqual(t) {\n    return t instanceof kn;\n  }\n\n}\n\nclass Cn extends An {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = On(this, t,\n    /*array=*/\n    !0),\n          n = this.wt.map(t => zn(t, e)),\n          r = new Ee(n);\n    return new Ae(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass Ln extends An {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = On(this, t,\n    /*array=*/\n    !0),\n          n = this.wt.map(t => zn(t, e)),\n          r = new Te(n);\n    return new Ae(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass Mn extends An {\n  constructor(t, e) {\n    super(t), this.yt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = new Ie(t.C, ge(t.C, this.yt));\n    return new Ae(t.path, e);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n/** Parse update data from an update() call. */\n\n\nfunction Un(t, e, n, r) {\n  const s = t.dt(1\n  /* Update */\n  , e, n);\n  Kn(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n        o = Yt.empty();\n  Et(r, (t, r) => {\n    const u = Hn(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    const c = s.ct(u);\n    if (r instanceof qn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = zn(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new Vt(i);\n  return new Nn(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction jn(t, e, n, r, s, i) {\n  const o = t.dt(1\n  /* Update */\n  , e, n),\n        u = [Qn(e, r, n)],\n        c = [s];\n  if (i.length % 2 != 0) throw new L(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n\n  for (let t = 0; t < i.length; t += 2) u.push(Qn(e, i[t])), c.push(i[t + 1]);\n\n  const a = [],\n        l = Yt.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (let t = u.length - 1; t >= 0; --t) if (!Xn(a, u[t])) {\n    const e = u[t];\n    let n = c[t]; // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    n = getModularInstance(n);\n    const r = o.ct(e);\n    if (n instanceof qn) // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = zn(n, r);\n      null != t && (a.push(e), l.set(e, t));\n    }\n  }\n\n  const f = new Vt(a);\n  return new Nn(l, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction Bn(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return zn(n, t.dt(r ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction zn(t, e) {\n  if (Wn( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n  if (t instanceof An) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Dn(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n\n      const n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.ot && 4\n    /* ArrayArgument */\n    !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n\n      for (const s of t) {\n        let t = zn(s, e.at(r));\n        null == t && ( // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return ge(e.C, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      const n = gt.fromDate(t);\n      return {\n        timestampValue: qe(e.C, n)\n      };\n    }\n\n    if (t instanceof gt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: qe(e.C, n)\n      };\n    }\n\n    if (t instanceof Rn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof In) return {\n      bytesValue: Oe(e.C, t._byteString)\n    };\n\n    if (t instanceof wn) {\n      const n = e.databaseId,\n            r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.ht(`Unsupported field value: ${it(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction Gn(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n\n    return !0;\n  }(t) ? Et(t, (t, r) => {\n    const s = zn(r, e.it(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction Wn(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n  if (!Wn(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = it(n);\n    throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction Qn(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof En) return e._internalPath;\n  if (\"string\" == typeof e) return Hn(t, e);\n  throw Jn(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nconst Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Hn(t, e, n) {\n  if (e.search(Yn) >= 0) throw Jn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return new En(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw Jn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction Jn(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n        o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new L(A, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction Xn(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nclass Zn {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n\n\n  get ref() {\n    return new wn(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n\n\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n\n\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new tr(this._firestore, this._userDataWriter, this._key, this._document,\n        /* converter= */\n        null);\n        return this._converter.fromFirestore(t);\n      }\n\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n\n}\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nclass tr extends Zn {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n\n}\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nclass er {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n\n\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n\n\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n\n\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n\n}\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction nr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && bn(t.query, e.query) && _t(t.docs, e.docs, nr);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction rr(t, e) {\n  return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nclass sr {}\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction ir(t) {\n  for (var _len8 = arguments.length, e = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    e[_key8 - 1] = arguments[_key8];\n  }\n\n  for (const n of e) t = n._apply(t);\n\n  return t;\n}\n\nclass or extends sr {\n  constructor(t, e, n) {\n    super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n  }\n\n  _apply(t) {\n    const e = Fn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n      let u;\n\n      if (s.isKeyField()) {\n        if (\"array-contains\"\n        /* ARRAY_CONTAINS */\n        === i || \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        === i) throw new L(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n\n        if (\"in\"\n        /* IN */\n        === i || \"not-in\"\n        /* NOT_IN */\n        === i) {\n          br(o, i);\n          const e = [];\n\n          for (const n of o) e.push(vr(r, t, n));\n\n          u = {\n            arrayValue: {\n              values: e\n            }\n          };\n        } else u = vr(r, t, o);\n      } else \"in\"\n      /* IN */\n      !== i && \"not-in\"\n      /* NOT_IN */\n      !== i && \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      !== i || br(o, i), u = Bn(n, e, o,\n      /* allowArrays= */\n      \"in\"\n      /* IN */\n      === i || \"not-in\"\n      /* NOT_IN */\n      === i);\n\n      const c = Zt.create(s, i, u);\n      return function (t, e) {\n        if (e.S()) {\n          const n = we(t);\n          if (null !== n && !n.isEqual(e.field)) throw new L(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n          const r = de(t);\n          null !== r && Er(t, e.field, r);\n        }\n\n        const n = function (t, e) {\n          for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n\n          return null;\n        }(t,\n        /**\n        * Given an operator, returns the set of operators that cannot be used with it.\n        *\n        * Operators in a query must adhere to the following set of rules:\n        * 1. Only one array operator is allowed.\n        * 2. Only one disjunctive operator is allowed.\n        * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n        * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n        *\n        * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n        * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n        */\n        function (t) {\n          switch (t) {\n            case \"!=\"\n            /* NOT_EQUAL */\n            :\n              return [\"!=\"\n              /* NOT_EQUAL */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"array-contains\"\n            /* ARRAY_CONTAINS */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"in\"\n            /* IN */\n            :\n              return [\"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"array-contains-any\"\n            /* ARRAY_CONTAINS_ANY */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              ];\n\n            case \"not-in\"\n            /* NOT_IN */\n            :\n              return [\"array-contains\"\n              /* ARRAY_CONTAINS */\n              , \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              , \"in\"\n              /* IN */\n              , \"not-in\"\n              /* NOT_IN */\n              , \"!=\"\n              /* NOT_EQUAL */\n              ];\n\n            default:\n              return [];\n          }\n        }(e.op));\n\n        if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n          throw n === e.op ? new L(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n      }(t, c), c;\n    }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n\n    return new mn(t.firestore, t.converter, function (t, e) {\n      const n = t.filters.concat([e]);\n      return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, n));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction ur(t, e, n) {\n  const r = e,\n        s = rr(\"where\", t);\n  return new or(s, r, n);\n}\n\nclass cr extends sr {\n  constructor(t, e) {\n    super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n  }\n\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new ae(e, n);\n      return function (t, e) {\n        if (null === de(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = we(t);\n          null !== n && Er(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */\n    (t._query, this._t, this.bt);\n\n    return new mn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction ar(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  const n = e,\n        r = rr(\"orderBy\", t);\n  return new cr(r, n);\n}\n\nclass hr extends sr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.Et = e, this.Tt = n;\n  }\n\n  _apply(t) {\n    return new mn(t.firestore, t.converter, function (t, e, n) {\n      return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this.Et, this.Tt));\n  }\n\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction lr(t) {\n  return ut(\"limit\", t), new hr(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction fr(t) {\n  return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nclass dr extends sr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.It = e, this.At = n;\n  }\n\n  _apply(t) {\n    const e = gr(t, this.type, this.It, this.At);\n    return new mn(t.firestore, t.converter, function (t, e) {\n      return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n\n}\n\nfunction wr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  return new dr(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction mr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  return new dr(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n\nclass pr extends sr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.It = e, this.At = n;\n  }\n\n  _apply(t) {\n    const e = gr(t, this.type, this.It, this.At);\n    return new mn(t.firestore, t.converter, function (t, e) {\n      return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n\n}\n\nfunction yr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return new pr(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction _r() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return new pr(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction gr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof Zn) return function (t, e, n, r, s) {\n    if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    for (const n of pe(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key));else {\n      const t = r.data.field(n.field);\n      if (St(t)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new L(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n\n      i.push(t);\n    }\n\n    return new ce(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Fn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new L(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new L(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(X.fromString(c));\n          if (!et.isDocumentKey(n)) throw new L(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new et(n);\n          u.push(Bt(e, s));\n        } else {\n          const t = Bn(n, r, c);\n          u.push(t);\n        }\n      }\n\n      return new ce(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction vr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(X.fromString(n));\n    if (!et.isDocumentKey(r)) throw new L(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return Bt(t, new et(r));\n  }\n\n  if (n instanceof wn) return Bt(t, n._key);\n  throw new L(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction br(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new L(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n  if (t.length > 10) throw new L(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Er(t, e, n) {\n  if (!n.isEqual(e)) throw new L(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction Tr(t, e, n) {\n  let r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nclass Ir extends class {\n  convertValue(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n    switch (Ct(t)) {\n      case 0\n      /* NullValue */\n      :\n        return null;\n\n      case 1\n      /* BooleanValue */\n      :\n        return t.booleanValue;\n\n      case 2\n      /* NumberValue */\n      :\n        return xt(t.integerValue || t.doubleValue);\n\n      case 3\n      /* TimestampValue */\n      :\n        return this.convertTimestamp(t.timestampValue);\n\n      case 4\n      /* ServerTimestampValue */\n      :\n        return this.convertServerTimestamp(t, e);\n\n      case 5\n      /* StringValue */\n      :\n        return t.stringValue;\n\n      case 6\n      /* BlobValue */\n      :\n        return this.convertBytes(Ft(t.bytesValue));\n\n      case 7\n      /* RefValue */\n      :\n        return this.convertReference(t.referenceValue);\n\n      case 8\n      /* GeoPointValue */\n      :\n        return this.convertGeoPoint(t.geoPointValue);\n\n      case 9\n      /* ArrayValue */\n      :\n        return this.convertArray(t.arrayValue, e);\n\n      case 10\n      /* ObjectValue */\n      :\n        return this.convertObject(t.mapValue, e);\n\n      default:\n        throw g();\n    }\n  }\n\n  convertObject(t, e) {\n    const n = {};\n    return Et(t.fields, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n\n  convertGeoPoint(t) {\n    return new Rn(xt(t.latitude), xt(t.longitude));\n  }\n\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = qt(t);\n        return null == n ? null : this.convertValue(n, e);\n\n      case \"estimate\":\n        return this.convertTimestamp(Ot(t));\n\n      default:\n        return null;\n    }\n  }\n\n  convertTimestamp(t) {\n    const e = $t(t);\n    return new gt(e.seconds, e.nanos);\n  }\n\n  convertDocumentKey(t, e) {\n    const n = X.fromString(t);\n    v(Xe(n));\n    const r = new H(n.get(1), n.get(3)),\n          s = new et(n.popFirst(5));\n    return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n    p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n\n  convertBytes(t) {\n    return new In(t);\n  }\n\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new wn(this.firestore,\n    /* converter= */\n    null, e);\n  }\n\n}\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction Ar(t) {\n  const e = un((t = ot(t, wn)).firestore),\n        n = new Ir(t.firestore);\n  return rn(e, [t._key]).then(e => {\n    v(1 === e.length);\n    const r = e[0];\n    return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction Rr(t) {\n  !function (t) {\n    if (\"L\"\n    /* Last */\n    === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ot(t, mn))._query);\n  const e = un(t.firestore),\n        n = new Ir(t.firestore);\n  return sn(e, t._query).then(e => {\n    const r = e.map(e => new tr(t.firestore, n, e.key, e, t.converter));\n    return \"L\"\n    /* Last */\n    === t._query.limitType && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new er(t, r);\n  });\n}\n\nfunction Pr(t, e, n) {\n  const r = Tr((t = ot(t, wn)).converter, e, n),\n        s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return nn(un(t.firestore), [s.toMutation(t._key, Re.none())]);\n}\n\nfunction Vr(t, e, n) {\n  const s = Fn((t = ot(t, wn)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  let i;\n\n  for (var _len13 = arguments.length, r = new Array(_len13 > 3 ? _len13 - 3 : 0), _key13 = 3; _key13 < _len13; _key13++) {\n    r[_key13 - 3] = arguments[_key13];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n  return nn(un(t.firestore), [i.toMutation(t._key, Re.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Nr(t) {\n  return nn(un((t = ot(t, wn)).firestore), [new De(t._key, Re.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Dr(t, e) {\n  const n = gn(t = ot(t, pn)),\n        r = Tr(t.converter, e),\n        s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return nn(un(t.firestore), [s.toMutation(n._key, Re.exists(!1))]).then(() => n);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction $r() {\n  return new qn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction xr() {\n  return new kn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Fr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Cn(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Sr() {\n  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    t[_key15] = arguments[_key15];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Ln(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction qr(t) {\n  return new Mn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nclass Or {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Fn(t);\n  }\n\n  set(t, e, n) {\n    this._verifyNotCommitted();\n\n    const r = kr(t, this._firestore),\n          s = Tr(r.converter, e, n),\n          i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n    return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n  }\n\n  update(t, e, n) {\n    this._verifyNotCommitted();\n\n    const s = kr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n\n    for (var _len16 = arguments.length, r = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n      r[_key16 - 3] = arguments[_key16];\n    }\n\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    this._verifyNotCommitted();\n\n    const e = kr(t, this._firestore);\n    return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n\n\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n\n  _verifyNotCommitted() {\n    if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n  }\n\n}\n\nfunction kr(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction Cr(t) {\n  const e = un(t = ot(t, an));\n  return new Or(t, t => nn(e, t));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nclass Lr {\n  constructor(t) {\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  async lookup(t) {\n    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n    const e = await rn(this.datastore, t);\n    return e.forEach(t => this.recordVersion(t)), e;\n  }\n\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n\n    this.writtenDocs.add(t.toString());\n  }\n\n  delete(t) {\n    this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  async commit() {\n    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n    const t = this.readVersions; // For each mutation, note that the doc was written.\n\n    this.mutations.forEach(e => {\n      t.delete(e.key.toString());\n    }), // For each document that was read but not written to, we want to perform\n    // a `verify` operation.\n    t.forEach((t, e) => {\n      const n = et.fromPath(e);\n      this.mutations.push(new $e(n, this.precondition(n)));\n    }), await nn(this.datastore, this.mutations), this.committed = !0;\n  }\n\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw g(); // Represent a deleted doc using SnapshotVersion.min().\n\n      e = vt.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n\n    if (n) {\n      if (!e.isEqual(n)) // This transaction will fail no matter what.\n        throw new L(F, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n\n\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(vt.min()) ? Re.exists(!1) : Re.updateTime(e) : Re.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n\n\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n    // read time and existence\n\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(vt.min())) // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new L(A, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n      return Re.updateTime(e);\n    } // Document was not read, so we just use the preconditions for a blind\n    // update.\n\n\n    return Re.exists(!0);\n  }\n\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n\n  ensureCommitNotCalled() {}\n\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Mr = {\n  maxAttempts: 5\n};\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\nclass Ur {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new tn(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  run() {\n    this.Rt -= 1, this.Vt();\n  }\n\n  Vt() {\n    this.Pt.H(async () => {\n      const t = new Lr(this.datastore),\n            e = this.Nt(t);\n      e && e.then(e => {\n        this.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          this.deferred.resolve(e);\n        }).catch(t => {\n          this.Dt(t);\n        }));\n      }).catch(t => {\n        this.Dt(t);\n      });\n    });\n  }\n\n  Nt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n\n  Dt(t) {\n    this.Rt > 0 && this.$t(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget(() => (this.Vt(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n\n  $t(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return g();\n\n          case T:\n          case I:\n          case R:\n          case $:\n          case O:\n          case k: // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n\n          case D:\n            return !1;\n\n          case A:\n          case P:\n          case V:\n          case N:\n          case x: // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n\n          case F:\n          case S:\n          case q:\n          case C:\n            return !0;\n        }\n      }(e);\n    }\n\n    return !1;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction jr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nclass Br {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new M(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n          o = new Br(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n\n\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n\n\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n\n\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass zr {\n  constructor() {\n    // The last promise in the queue.\n    this.xt = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Ft = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.St = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.qt = [], // visible for testing\n    this.Ot = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.kt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.Ct = !1, // List of TimerIds to fast-forward delays for.\n    this.Lt = [], // Backoff timer used to schedule retries for retryable operations\n    this.Pt = new tn(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Mt = () => {\n      const t = jr();\n      t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.X();\n    };\n    const t = jr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n  }\n\n  get isShuttingDown() {\n    return this.St;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n\n\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Ut(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.jt(t);\n  }\n\n  enterRestrictedMode(t) {\n    if (!this.St) {\n      this.St = !0, this.Ct = t || !1;\n      const e = jr();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n    }\n  }\n\n  enqueue(t) {\n    if (this.Ut(), this.St) // Return a Promise which never resolves.\n      return new Promise(() => {}); // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n\n    const e = new M();\n    return this.jt(() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Ft.push(t), this.Bt()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n\n\n  async Bt() {\n    if (0 !== this.Ft.length) {\n      try {\n        await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n      } catch (t) {\n        if (!\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n\n        /** Verifies whether `e` is an IndexedDbTransactionError. */\n        function (t) {\n          // Use name equality, as instanceof checks on errors don't work with errors\n          // that wrap other errors.\n          return \"IndexedDbTransactionError\" === t.name;\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        (t)) throw t; // Failure will be handled by AsyncQueue\n\n        m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n      }\n\n      this.Ft.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.Pt.H(() => this.Bt());\n    }\n  }\n\n  jt(t) {\n    const e = this.xt.then(() => (this.kt = !0, t().catch(t => {\n      this.Ot = t, this.kt = !1;\n\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */\n      (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n\n\n      throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.kt = !1, t))));\n    return this.xt = e, e;\n  }\n\n  enqueueAfterDelay(t, e, n) {\n    this.Ut(), // Fast-forward delays for timerIds that have been overriden.\n    this.Lt.indexOf(t) > -1 && (e = 0);\n    const r = Br.createAndSchedule(this, t, e, n, t => this.zt(t));\n    return this.qt.push(r), r;\n  }\n\n  Ut() {\n    this.Ot && g();\n  }\n\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n\n\n  async Gt() {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let t;\n\n    do {\n      t = this.xt, await t;\n    } while (t !== this.xt);\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n\n\n  Wt(t) {\n    for (const e of this.qt) if (e.timerId === t) return !0;\n\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n\n\n  Kt(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.Gt().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.qt.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n\n      for (const e of this.qt) if (e.skipDelay(), \"all\"\n      /* All */\n      !== t && e.timerId === t) break;\n\n      return this.Gt();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n\n\n  Qt(t) {\n    this.Lt.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n\n\n  zt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.qt.indexOf(t);\n    this.qt.splice(e, 1);\n  }\n\n}\n\nclass Gr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  get(t) {\n    const e = kr(t, this._firestore),\n          n = new Ir(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return g();\n      const r = t[0];\n      if (r.isFoundDocument()) return new Zn(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new Zn(this._firestore, n, e._key, null, e.converter);\n      throw g();\n    });\n  }\n\n  set(t, e, n) {\n    const r = kr(t, this._firestore),\n          s = Tr(r.converter, e, n),\n          i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n    return this._transaction.set(r._key, i), this;\n  }\n\n  update(t, e, n) {\n    const s = kr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n\n    for (var _len17 = arguments.length, r = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n      r[_key17 - 3] = arguments[_key17];\n    }\n\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    const e = kr(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n\n}\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction Wr(t, e, n) {\n  const r = un(t = ot(t, an)),\n        s = Object.assign(Object.assign({}, Mr), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n  }(s);\n  const i = new M();\n  return new Ur(new zr(), r, s, n => e(new Gr(t, n)), i).run(), i.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  f = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, _ref3) => {\n  let {\n    instanceIdentifier: e,\n    options: n\n  } = _ref3;\n  const r = t.getProvider(\"app\").getImmediate(),\n        s = new an(new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")), function (t, e) {\n    if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n    return new H(t.options.projectId, e);\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.5.0\", \"\"), registerVersion(\"firestore-lite\", \"3.5.0\", \"esm2017\");\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };","map":{"version":3,"mappings":"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","names":["l","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","f","d","o","w","setLogLevel","m","logLevel","u","DEBUG","e","n","map","_","debug","p","ERROR","error","y","WARN","warn","JSON","stringify","g","Error","v","b","E","T","I","A","R","P","V","N","D","$","x","F","S","q","O","k","C","L","c","code","message","toString","name","M","promise","Promise","resolve","reject","U","user","type","headers","Map","set","j","getToken","invalidateToken","start","enqueueRetryable","shutdown","B","token","changeListener","z","auth","onInit","then","accessToken","getUid","G","r","i","h","getAuthHeaderValueForFirstParty","W","K","value","length","Q","appCheck","Y","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","H","projectId","database","empty","isDefaultDatabase","J","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","X","canonicalString","join","fromString","indexOf","split","filter","emptyPath","Z","tt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","et","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","nt","rt","st","it","substring","Array","ot","_delegate","ut","ct","at","ht","BatchGetDocuments","Commit","RunQuery","lt","ft","dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","wt","databaseInfo","method","body","status","statusText","ok","json","mt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","pt","charAt","yt","_t","every","gt","seconds","nanoseconds","now","fromMillis","Date","fromDate","getTime","toDate","toMillis","_compareTo","toJSON","valueOf","String","padStart","vt","timestamp","fromTimestamp","max","compareTo","toMicroseconds","toTimestamp","bt","Object","prototype","hasOwnProperty","call","Et","Tt","root","At","EMPTY","insert","copy","BLACK","remove","key","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","It","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","Rt","data","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","Pt","add","delete","unionWith","iter","Vt","fields","sort","covers","Nt","binaryString","fromBase64String","atob","fromUint8Array","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","Dt","RegExp","$t","exec","substr","Number","nanos","xt","Ft","St","mapValue","__type__","stringValue","qt","__previous_value__","Ot","__local_write_time__","timestampValue","kt","Ct","Lt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Mt","find","Ut","jt","keys","Bt","zt","Gt","Wt","Kt","Qt","assign","Yt","field","getFieldsMap","setAll","applyChanges","clone","Ht","documentType","version","readTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Jt","orderBy","filters","startAt","endAt","Xt","Zt","op","create","te","se","ie","oe","ue","ee","ne","matches","re","some","nullValue","ce","position","inclusive","ae","dir","he","le","fe","explicitOrderBy","limitType","de","we","me","pe","ye","_e","ge","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","ve","be","Ee","elements","Te","Ie","Ae","transform","Re","updateTime","exists","none","isNone","Pe","Ve","precondition","fieldTransforms","getFieldMask","Ne","fieldMask","De","$e","xe","asc","desc","Fe","in","Se","qe","toISOString","Oe","ke","Ce","Le","Me","Ue","Xe","je","Be","ze","Ge","found","missing","We","update","updateMask","Je","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","Ke","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","He","fieldFilter","Ye","compositeFilter","where","direction","Qe","before","fieldPaths","Ze","tn","timerId","reset","cancel","enqueueAfterDelay","skipDelay","en","authCredentials","appCheckCredentials","all","catch","terminate","nn","writes","rn","documents","sn","document","on","un","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","cn","credentials","ignoreUndefinedProperties","cacheSizeBytes","an","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","hn","_getProvider","isInitialized","initialize","instanceIdentifier","ln","getImmediate","identifier","fn","mockUserToken","a","sub","user_id","dn","wn","converter","_key","firestore","_path","id","pn","withConverter","mn","_query","yn","_n","gn","arguments","vn","bn","En","_internalPath","Tn","In","_byteString","An","_methodName","Rn","isFinite","_lat","_long","Pn","Vn","toMutation","Nn","Dn","$n","Jn","methodName","contains","xn","Fn","Sn","merge","mergeFields","Kn","Gn","Qn","Xn","qn","_toFieldTransform","On","kn","Cn","zn","Ln","Mn","Un","Hn","jn","Bn","Wn","getPrototypeOf","Yn","search","Zn","_firestore","_userDataWriter","_document","_converter","ref","tr","fromFirestore","convertValue","rr","er","_docs","query","docs","nr","sr","ir","_apply","or","br","vr","Er","concat","ur","cr","ar","hr","lr","fr","dr","gr","wr","mr","pr","yr","_r","isArray","Tr","toFirestore","Ir","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Ar","Rr","reverse","Pr","Vr","Nr","Dr","$r","xr","Fr","Sr","qr","Or","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","kr","commit","Cr","Lr","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","Mr","maxAttempts","Ur","asyncQueue","updateFunction","deferred","run","enqueueAndForget","jr","Br","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","zr","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","Gr","_transaction","Wr","getProvider","apply","setMultipleInstances"],"sources":["C:\\Users\\qlamb\\Desktop\\Projects\\current-portfolio\\node_modules\\@firebase\\firestore\\dist\\lite\\index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.10.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= u.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= u.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= u.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", N = \"permission-denied\", D = \"unauthenticated\", $ = \"resource-exhausted\", x = \"failed-precondition\", F = \"aborted\", S = \"out-of-range\", q = \"unimplemented\", O = \"internal\", k = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class L extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class M {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class U {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class j {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new U(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = l.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        v(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass K {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Q {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new K(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Y {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass H {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new H(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new L(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new L(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new L(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new L(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new L(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new L(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new L(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return x;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return S;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return k;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    v(t, e, n, r, s) {\n        const i = this.T(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.I(o, r, s), this.A(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    I(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ht[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async A(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new L(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    static max() {\n        return new vt(new gt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass Tt {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || At.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new It(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new It(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass It {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass At {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, \n        this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return At.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return At.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, At.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, At.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw g();\n        if (this.right.isRed()) throw g();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw g();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1;\n\n// end LLRBEmptyNode\nAt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw g();\n    }\n    get value() {\n        throw g();\n    }\n    get color() {\n        throw g();\n    }\n    get left() {\n        throw g();\n    }\n    get right() {\n        throw g();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new At(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Rt {\n    constructor(t) {\n        this.comparator = t, this.data = new Tt(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Pt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Pt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Rt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Rt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Pt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Vt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    static empty() {\n        return new Vt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Rt(tt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Vt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Nt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new Nt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Nt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: xt(t.seconds),\n        nanos: xt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function xt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Lt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = xt(t.doubleValue), r = xt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction Mt(t, e) {\n    return void 0 !== (t.values || []).find((t => Lt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = xt(t.integerValue || t.doubleValue), r = xt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(xt(t.latitude), xt(e.latitude));\n            if (0 !== n) return n;\n            return yt(xt(t.longitude), xt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = $t(t), r = $t(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function zt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Gt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Qt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Qt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Yt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Yt(Qt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Ht {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Ht(t, 0 /* INVALID */ , vt.min(), vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Ht(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Ht(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Ht(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Yt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = vt.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Jt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.D = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Xt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Jt(t, e, n, r, s, i, o);\n}\n\nclass Zt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.$(t, e, n) : new te(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* IN */ === e ? new ie(t, n) : \"not-in\" /* NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static $(t, e, n) {\n        return \"in\" /* IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.F(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.F(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    F(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    S() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.F(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = re(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = re(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return zt(e) && Mt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Mt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Mt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ce {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Lt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class fe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function de(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n    for (const e of t.filters) if (e.S()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction me(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function pe(t) {\n    const e = b(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = we(e), n = de(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.q.push(new ae(tt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ye(t) {\n    const e = b(t);\n    if (!e.O) if (\"F\" /* First */ === e.limitType) e.O = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of pe(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = Xt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction _e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n    }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction ge(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class ve {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class be extends ve {}\n\n/** Transforms an array value via a union operation. */ class Ee extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Te extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ie extends ve {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Ae {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Re {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Re;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Re(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Re(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Pe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ve extends Pe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ne extends Pe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class De extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class $e extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const xe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Fe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Se {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction qe(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Oe(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n    return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Le(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n    return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(Xe(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction je(t, e) {\n    return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n    return {\n        name: Me(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ge(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ue(t, e.found.name), r = Ce(e.found.updateTime), s = new Yt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Ht.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Ue(t, e.missing), r = Ce(e.readTime);\n        return Ht.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction We(t, e) {\n    let n;\n    if (e instanceof Ve) n = {\n        update: ze(t, e.key, e.value)\n    }; else if (e instanceof De) n = {\n        delete: Me(t, e.key)\n    }; else if (e instanceof Ne) n = {\n        update: ze(t, e.key, e.data),\n        updateMask: Je(e.fieldMask)\n    }; else {\n        if (!(e instanceof $e)) return g();\n        n = {\n            verify: Me(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof be) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ee) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: He(t.field),\n                    op: Ye(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: He(t.field),\n                direction: Qe(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Qe(t) {\n    return xe[t];\n}\n\n// visible for testing\nfunction Ye(t) {\n    return Fe[t];\n}\n\nfunction He(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Je(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Xe(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ze(t) {\n    return new Se(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass tn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.G = 0, this.W = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.G = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.G = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.G + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.G} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.W = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.G *= this.j, this.G < this.U && (this.G = this.U), this.G > this.B && (this.G = this.B);\n    }\n    X() {\n        null !== this.W && (this.W.skipDelay(), this.W = null);\n    }\n    cancel() {\n        null !== this.W && (this.W.cancel(), this.W = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.G;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass en extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.Z = n, this.C = r, \n        this.tt = !1;\n    }\n    et() {\n        if (this.tt) throw new L(x, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.Z.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.Z.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.tt = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function nn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        writes: e.map((t => We(n.C, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function rn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        documents: e.map((t => Me(n.C, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Ge(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function sn(t, e) {\n    const n = b(t), r = Ke(n.C, ye(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ue(t, e.name), s = Ce(e.updateTime), i = new Yt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Ht.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.C, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const on = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction un(t) {\n    if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n    if (!on.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ze(t._databaseId), u = function(t, e, n, r) {\n            return new en(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        on.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return on.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass cn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new L(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class an {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new j;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new W(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = on.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction hn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new L(x, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction ln(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\";\n    return _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function fn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, an))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new U(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function dn(t) {\n    return t = ot(t, an), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass wn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new pn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new wn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class mn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new mn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class pn extends mn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new fe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new wn(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new pn(this.firestore, t, this._path);\n    }\n}\n\nfunction yn(t, e, ...n) {\n    if (t = h(t), nt(\"collection\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return st(r), new pn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new pn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function _n(t, e) {\n    if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new mn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new fe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction gn(t, e, ...n) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.N()), nt(\"doc\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new wn(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function vn(t, e) {\n    return t = h(t), e = h(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function bn(t, e) {\n    return t = h(t), e = h(e), t instanceof mn && e instanceof mn && (t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class En {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Tn() {\n    return new En(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class In {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new In(Nt.fromBase64String(t));\n        } catch (t) {\n            throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new In(Nt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class An {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Rn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Vn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Nn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Dn(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class $n {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get rt() {\n        return this.settings.rt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    st(t) {\n        return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.ut(t), r;\n    }\n    ct(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.nt(), r;\n    }\n    at(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.st({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ht(t) {\n        return Jn(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    nt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n        if (Dn(this.rt) && Pn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class xn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || Ze(t);\n    }\n    /** Creates a new top-level parse context. */    dt(t, e, n, r = !1) {\n        return new $n({\n            rt: t,\n            methodName: e,\n            ft: n,\n            path: tt.emptyPath(),\n            ot: !1,\n            lt: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Fn(t) {\n    const e = t._freezeSettings(), n = Ze(t._databaseId);\n    return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Sn(t, e, n, r, s, i = {}) {\n    const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Kn(\"Data must be an object, but it was:\", o, r);\n    const u = Gn(r, o);\n    let c, a;\n    if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Qn(e, r, n);\n            if (!o.contains(s)) throw new L(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Xn(t, s) || t.push(s);\n        }\n        c = new Vt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Vn(new Yt(u), c, a);\n}\n\nclass qn extends An {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof qn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function On(t, e, n) {\n    return new $n({\n        rt: 3 /* Argument */ ,\n        ft: e.settings.ft,\n        methodName: t._methodName,\n        ot: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass kn extends An {\n    _toFieldTransform(t) {\n        return new Ae(t.path, new be);\n    }\n    isEqual(t) {\n        return t instanceof kn;\n    }\n}\n\nclass Cn extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Ee(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Ln extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Te(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Mn extends An {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ie(t.C, ge(t.C, this.yt));\n        return new Ae(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Un(t, e, n, r) {\n    const s = t.dt(1 /* Update */ , e, n);\n    Kn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Yt.empty();\n    Et(r, ((t, r) => {\n        const u = Hn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.ct(u);\n        if (r instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = zn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Vt(i);\n    return new Nn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function jn(t, e, n, r, s, i) {\n    const o = t.dt(1 /* Update */ , e, n), u = [ Qn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new L(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Qn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Yt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Xn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = h(n);\n        const r = o.ct(e);\n        if (n instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = zn(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Vt(a);\n    return new Nn(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Bn(t, e, n, r = !1) {\n    return zn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function zn(t, e) {\n    if (Wn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n    if (t instanceof An) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Dn(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = zn(s, e.at(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return ge(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof Rn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof In) return {\n            bytesValue: Oe(e.C, t._byteString)\n        };\n        if (t instanceof wn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ht(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Gn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = zn(r, e.it(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Wn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n    if (!Wn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Qn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = h(e)) instanceof En) return e._internalPath;\n    if (\"string\" == typeof e) return Hn(t, e);\n    throw Jn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Hn(t, e, n) {\n    if (e.search(Yn) >= 0) throw Jn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new En(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Jn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Jn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new L(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Xn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Zn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new wn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new tr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class tr extends Zn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class er {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function nr(t, e) {\n    return t = h(t), e = h(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && (bn(t.query, e.query) && _t(t.docs, e.docs, nr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function rr(t, e) {\n    return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass sr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function ir(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass or extends sr {\n    constructor(t, e, n) {\n        super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Fn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new L(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(vr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = vr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || br(o, i), \n            u = Bn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Zt.create(s, i, u);\n            return function(t, e) {\n                if (e.S()) {\n                    const n = we(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new L(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = de(t);\n                    null !== r && Er(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new L(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function ur(t, e, n) {\n    const r = e, s = rr(\"where\", t);\n    return new or(s, r, n);\n}\n\nclass cr extends sr {\n    constructor(t, e) {\n        super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === de(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = we(t);\n                    null !== n && Er(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._t, this.bt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function ar(t, e = \"asc\") {\n    const n = e, r = rr(\"orderBy\", t);\n    return new cr(r, n);\n}\n\nclass hr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Et = e, this.Tt = n;\n    }\n    _apply(t) {\n        return new mn(t.firestore, t.converter, function(t, e, n) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.Et, this.Tt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function lr(t) {\n    return ut(\"limit\", t), new hr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function fr(t) {\n    return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass dr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction wr(...t) {\n    return new dr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction mr(...t) {\n    return new dr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass pr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction yr(...t) {\n    return new pr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction _r(...t) {\n    return new pr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function gr(t, e, n, r) {\n    if (n[0] = h(n[0]), n[0] instanceof Zn) return function(t, e, n, r, s) {\n        if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of pe(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new L(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ce(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Fn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new L(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new L(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new L(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = Bn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ce(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction vr(t, e, n) {\n    if (\"string\" == typeof (n = h(n))) {\n        if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new L(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new et(r));\n    }\n    if (n instanceof wn) return Bt(t, n._key);\n    throw new L(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new L(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new L(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Er(t, e, n) {\n    if (!n.isEqual(e)) throw new L(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Tr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Ir extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return xt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Rn(xt(t.latitude), xt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(Xe(n));\n        const r = new H(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new In(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Ar(t) {\n    const e = un((t = ot(t, wn)).firestore), n = new Ir(t.firestore);\n    return rn(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Rr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, mn))._query);\n    const e = un(t.firestore), n = new Ir(t.firestore);\n    return sn(e, t._query).then((e => {\n        const r = e.map((e => new tr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new er(t, r);\n    }));\n}\n\nfunction Pr(t, e, n) {\n    const r = Tr((t = ot(t, wn)).converter, e, n), s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return nn(un(t.firestore), [ s.toMutation(t._key, Re.none()) ]);\n}\n\nfunction Vr(t, e, n, ...r) {\n    const s = Fn((t = ot(t, wn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n    return nn(un(t.firestore), [ i.toMutation(t._key, Re.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Nr(t) {\n    return nn(un((t = ot(t, wn)).firestore), [ new De(t._key, Re.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Dr(t, e) {\n    const n = gn(t = ot(t, pn)), r = Tr(t.converter, e), s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return nn(un(t.firestore), [ s.toMutation(n._key, Re.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function $r() {\n    return new qn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function xr() {\n    return new kn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Fr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Cn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Sr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Ln(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function qr(t) {\n    return new Mn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Or {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Fn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = kr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction kr(t, e) {\n    if ((t = h(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Cr(t) {\n    const e = un(t = ot(t, an));\n    return new Or(t, (t => nn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Lr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await rn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new $e(n, this.precondition(n)));\n        })), await nn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new L(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(vt.min()) ? Re.exists(!1) : Re.updateTime(e) : Re.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new L(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Re.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Re.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Ur {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new tn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Rt -= 1, this.Vt();\n    }\n    Vt() {\n        this.Pt.H((async () => {\n            const t = new Lr(this.datastore), e = this.Nt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Dt(t);\n                }))));\n            })).catch((t => {\n                this.Dt(t);\n            }));\n        }));\n    }\n    Nt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Dt(t) {\n        this.Rt > 0 && this.$t(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Vt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    $t(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case k:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case N:\n                  case x:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case S:\n                  case q:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function jr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Br {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new M, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Br(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class zr {\n    constructor() {\n        // The last promise in the queue.\n        this.xt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Ft = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.St = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.qt = [], \n        // visible for testing\n        this.Ot = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.kt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Lt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new tn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Mt = () => {\n            const t = jr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.X();\n        };\n        const t = jr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n    }\n    get isShuttingDown() {\n        return this.St;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ut(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.jt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.St) {\n            this.St = !0, this.Ct = t || !1;\n            const e = jr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ut(), this.St) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new M;\n        return this.jt((() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Ft.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.Ft.length) {\n            try {\n                await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Ft.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.H((() => this.Bt()));\n        }\n    }\n    jt(t) {\n        const e = this.xt.then((() => (this.kt = !0, t().catch((t => {\n            this.Ot = t, this.kt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.kt = !1, t))))));\n        return this.xt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ut(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Lt.indexOf(t) > -1 && (e = 0);\n        const r = Br.createAndSchedule(this, t, e, n, (t => this.zt(t)));\n        return this.qt.push(r), r;\n    }\n    Ut() {\n        this.Ot && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Gt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.xt, await t;\n        } while (t !== this.xt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Wt(t) {\n        for (const e of this.qt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Kt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Gt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.qt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Gt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Qt(t) {\n        this.Lt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    zt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.qt.indexOf(t);\n        this.qt.splice(e, 1);\n    }\n}\n\nclass Gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = kr(t, this._firestore), n = new Ir(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Zn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Zn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = kr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Wr(t, e, n) {\n    const r = un(t = ot(t, an)), s = Object.assign(Object.assign({}, Mr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new M;\n    return new Ur(new zr, r, s, (n => e(new Gr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new an(new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n        return new H(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.5.0\", \"\"), r(\"firestore-lite\", \"3.5.0\", \"__BUILD_TARGET__\");\n\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}